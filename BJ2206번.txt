#include <bits/stdc++.h>
using namespace std;


int dx[4] = {1,0,-1,0};
int dy[4] = {0,1,0,-1};

char board[1000][1000];
int dist[1000][1000][2];

int n, m;


int bfs(){
    queue<tuple<int, int, int>> q;

    
    q.push({0,0,0});
    dist[0][0][0] = dist[0][0][1] = 1;

    while(!q.empty()){
        int x, y, wall;
        tie(x, y, wall) = q.front(); q.pop();
        int nxtdist = dist[x][y][wall] + 1;
        if(x == n-1 && y == m-1) return dist[x][y][wall];

        for(int dir = 0; dir < 4; dir++){
            int nx = x + dx[dir];
            int ny = y + dy[dir];

            if(nx < 0 || nx >= n || ny < 0 || ny >= m) continue;

            if(board[nx][ny] == '0' && dist[nx][ny][wall] == 0){
                dist[nx][ny][wall] = nxtdist;
                q.push({nx,ny,wall});
            }
            if(!wall && board[nx][ny] == '1'){
                dist[nx][ny][1] = nxtdist;
                q.push({nx, ny, 1});
            }
        }
    }
    return -1;

}



int main(){
    cin >> n >>  m;

    for(int i = 0; i < n; i++)
        for(int j = 0; j < m; j++)
            cin >> board[i][j];
    cout << bfs();




}