#include <bits/stdc++.h>
using namespace std;

const int max_arr = 100;
int n, m, k, cnt, ret;
int board[max_arr][max_arr], visited[max_arr][max_arr];
int dx[4] = {0, 1, 0, -1};
int dy[4] = {-1, 0, 1, 0};

vector<int> v;

void DFS(int y, int x)
{
    visited[y][x] = 1;

    for (int i = 0; i < 4; i++)
    {
        int ny = y + dy[i];
        int nx = x + dx[i];

        if (ny < 0 || ny >= n || nx < 0 || nx >= m)continue;
        if (board[ny][nx] || visited[ny][nx])continue;
        DFS(ny, nx);
    }
    ret++;
    return;
}

int main()
{
    cin >> m >> n >> k;
    while (k--)
    {
        int x, y, x1, y1;
        cin >> y >> x >> y1 >> x1;
        for (int i = y; i < y1; i++)
        {
            for (int j = x; j < x1; j++)
            {
                board[i][j] = 1;
            }
        }
    }
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            if (!board[i][j] && !visited[i][j])
            {
                ret = 0;
                cnt++;
                DFS(i, j);
                v.push_back(ret);
                
            }
        }
    }
    cout << cnt << '\n';
    sort(v.begin(), v.end());
    for(int c : v) cout << c << " ";
}